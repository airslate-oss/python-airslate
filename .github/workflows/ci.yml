# This file is part of the airslate.
#
# Copyright (c) 2021-2023 airSlate, Inc.
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

name: Unit Tests

on:
  push:
    branches-ignore:
      # These should always correspond to pull requests, so ignore them for
      # the push trigger and let them be triggered by the pull_request
      # trigger, avoiding running the workflow twice.  This is a minor
      # optimization so there's no need to ensure this is comprehensive.
      - 'dependabot/**'

  pull_request:
    branches:
      - main

  schedule:
    - cron: '0 12 * * *'
      #      | | | | |
      #      | | | | |____ day of the week (0 - 6 or SUN-SAT)
      #      | | | |____ month (1 - 12 or JAN-DEC)
      #      | | |____ day of the month (1 - 31)
      #      | |____ hour (0 - 23)
      #      |____ minute (0 - 59)

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: Python ${{ matrix.python }} on ${{ matrix.os }}

    # The maximum number of minutes to let a workflow run
    # before GitHub automatically cancels it. Default: 360
    timeout-minutes: 30

    strategy:
      # When set to true, GitHub cancels
      # all in-progress jobs if any matrix job fails.
      fail-fast: false

      matrix:
        python:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip
          - os: windows-latest
            path: ~\AppData\Local\pip\Cache

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5.0.0
        with:
          python-version: ${{ matrix.python }}

      - name: 'Setup pip cache on ${{ runner.os }}'
        uses: actions/cache@v3
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Makefile selftest
        run: make help

      - name: Install virtualenv
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          python -m pip install virtualenv

      - name: Set up virtualenv
        run: make init

      - name: Install dependencies
        run: make install

      - name: Setuptools self-test
        run: |
          python setup.py --fullname
          python setup.py --long-description
          python setup.py --classifiers

      - name: Run unit tests with coverage
        run: make test

      - name: Combine coverage reports
        run: make ccov

      - uses: codecov/codecov-action@v3.1.4
        if: success()
        with:
          fail_ci_if_error: false
          verbose: true
          name: codecov-umbrella
          flags: unittests
          env_vars: OS,PYTHON
