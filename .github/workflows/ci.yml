# This file is part of the airslate.
#
# Copyright (c) 2021-2022 airSlate, Inc.
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

name: CI

on:
  push:
    branches:
      - master
      - 'feature/**'
      - 'release/**'
      - 'fix/**'

  # The branches below must be a subset of the branches above
  pull_request:
    branches:
      - master

  schedule:
    - cron: '0 12 * * *'
      #      | | | | |
      #      | | | | |____ day of the week (0 - 6 or SUN-SAT)
      #      | | | |____ month (1 - 12 or JAN-DEC)
      #      | | |____ day of the month (1 - 31)
      #      | |____ hour (0 - 23)
      #      |____ minute (0 - 59)

env:
  PYTHONUNBUFFERED: '1'

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: Python ${{ matrix.python }} on ${{ matrix.os }}

    # The maximum number of minutes to let a workflow run
    # before GitHub automatically cancels it. Default: 360
    timeout-minutes: 30

    strategy:
      # When set to true, GitHub cancels
      # all in-progress jobs if any matrix job fails.
      fail-fast: false

      matrix:
        python:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11.0-beta.3 - 3.11.0'
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 5

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4.2.0
        with:
          python-version: ${{ matrix.python }}

      - name: Makefile selftest
        run: make help

      - name: Install virtualenv
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          python -m pip install virtualenv

      - name: Set up virtualenv
        run: make init

      - name: Install dependencies
        run: make install

      - name: Setuptools self-test
        run: |
          python setup.py --fullname
          python setup.py --long-description
          python setup.py --classifiers

      - name: Run unit tests with coverage
        run: make test

      - name: Success Reporting
        if: success()
        run: git log --format=fuller -5

  lint:
    runs-on: ubuntu-20.04
    name: Code linting

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.0.2

      - name: Set up Python 3.10
        uses: actions/setup-python@v4.2.0
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: make init

      - name: Code linting
        run: make lint

  package:
    runs-on: ubuntu-20.04
    name: Build & verify package

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.0.2

      - name: Set up Python 3.10
        uses: actions/setup-python@v4.2.0
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: make init

      - name: Testing package distribution and installation
        run: make test-dist
